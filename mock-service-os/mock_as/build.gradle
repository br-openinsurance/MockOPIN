buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'software.amazon.awssdk:auth:2.20.133'
        classpath 'software.amazon.awssdk:sso:2.20.133'
        classpath 'software.amazon.awssdk:sts:2.20.133'
    }
}

import software.amazon.awssdk.auth.credentials.AwsSessionCredentials
import software.amazon.awssdk.auth.credentials.DefaultCredentialsProvider

plugins {
    id 'base'
    id 'maven-publish'
}

def props = new Properties()
file("version.properties").withInputStream { props.load(it) }
String buildNumber = System.getenv("BUILD_NUMBER")

version = System.getenv("CHANGE_ID") ? "PR-${System.getenv("CHANGE_ID")}-SNAPSHOT" : "${props.VERSION}.${buildNumber}"
group "com.raidiam.trustframework.mock-service-os"

ext {
    dirSizeLimit = 230
    isTestMode = project.hasProperty('testMode') ? project.property('testMode').toBoolean() : false
}

task checkSize {
    doLast {
        File dir = new File('node_modules')
        long size = 0
        dir.eachFileRecurse(groovy.io.FileType.FILES) { file ->
            size += file.length()
        }
        long sizeInMB = size / (1024 * 1024)

        if (sizeInMB > dirSizeLimit) {
            throw new GradleException("node_modules is over the limit (${dirSizeLimit}MB)")
        }

        println "node_modules directory size (${sizeInMB}MB) is within the limit"

    }
    onlyIf { !isTestMode }
}

task packageLayer(type: Zip) {
    destinationDirectory = file("$buildDir/dists")
    archiveClassifier = 'layer'

    from file('node_modules')
    into 'nodejs/node_modules'
}

task packageAssets(type: Zip) {
    destinationDirectory = file("$buildDir/dists")
    archiveClassifier = 'ui'

    from("public")
}

task packageApp(type: Zip) {
    destinationDirectory = file("$buildDir/dists")
    
    from('utils'){
        into 'utils'
    }
    from('views'){
        into 'views'
    }
    
    from file('lambda.js')
    from file('express.js')
    from file('package.json')
}