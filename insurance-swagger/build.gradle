buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath group: 'org.yaml', name: 'snakeyaml', version: '2.0'
    classpath 'software.amazon.awssdk:auth:2.20.133'
    classpath 'software.amazon.awssdk:sso:2.20.133'
    classpath 'software.amazon.awssdk:sts:2.20.133'
  }
}

plugins {
  id 'org.hidetake.swagger.generator' version '2.19.2'
  id 'java'
  id 'maven-publish'
}

def cfg = new org.yaml.snakeyaml.Yaml().load(new File("swagger.yaml").newInputStream())
String buildNumber = System.getenv("BUILD_NUMBER")

group = 'com.raidiam.trustframework.mockinsurance'
version = System.getenv("CHANGE_ID") ? "${System.getenv("BRANCH_NAME")}-SNAPSHOT" : "${cfg.info.version}.${buildNumber}"
println version
repositories {
  mavenCentral()
}

dependencies {
  annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
  annotationProcessor "io.micronaut:micronaut-inject-java"
  annotationProcessor "io.micronaut:micronaut-validation"

  implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
  implementation "io.micronaut:micronaut-inject"
  implementation "io.micronaut:micronaut-validation"
  implementation "io.micronaut:micronaut-runtime"
  implementation "io.swagger.core.v3:swagger-annotations:2.2.22"

  implementation 'jakarta.inject:jakarta.inject-api:2.0.1'
  implementation 'jakarta.validation:jakarta.validation-api:3.1.0'

  swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.61'
}

java {
  withSourcesJar()
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifact(file('swagger.yaml')) {
        classifier 'swagger'
        extension 'yaml'
      }
    }
  }
}

swaggerSources {
  mockinsurance {
    inputFile = file('swagger.yaml')
    code {
      language = 'micronaut'
      components = [
          models    : true,
          modelDocs : true,
          apiDocs   : false,
          modelTests: true,
      ]
      configFile = file("micronaut-config.json")
      templateDir = file("templates")
    }
  }
}

sourcesJar.dependsOn swaggerSources.mockinsurance.code
compileJava.dependsOn swaggerSources.mockinsurance.code
sourceSets.main.java.srcDir "${swaggerSources.mockinsurance.code.outputDir}/src/main/java"
sourceSets.main.resources.srcDir "${swaggerSources.mockinsurance.code.outputDir}/src/main/resources"
