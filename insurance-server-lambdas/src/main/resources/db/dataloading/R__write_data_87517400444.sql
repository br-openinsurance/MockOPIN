-- ${flyway:timestamp}
DO $$DECLARE
    docId varchar := '87517400444';
    accountHolderName varchar := 'Gabriel Nunes';
    accountHolderEmail varchar := 'gabriel.nunes@email.com';
    account1Id varchar;
        capitalizationTitlePlanId1 uuid;
        capitalizationTitlePlanSeriesId1 uuid;
        capitalizationTitlePlanEventId1 uuid;
        capitalizationTitlePlanSettlementId1 uuid;
        capitalizationTitlePlanTitleId1 uuid;
        capitalizationTitlePlanSubscriberId1 uuid;
        capitalizationTitlePlanHolderId1 uuid;
        capitalizationTitlePlanTechnicalProvisionId1 uuid;
        financialRiskPolicyId1 uuid;
        financialRiskPolicyInsuredObjectId1 uuid;
        financialRiskPolicyCoverageDeductibleId1 uuid;
        financialRiskPolicyCoveragePosId1 uuid;
        financialRiskPolicyClaimId1 uuid;
        financialRiskPolicyPremiumId1 uuid;
        financialRiskInsuredId1 uuid;
        financialRiskBeneficiaryId1 uuid;
        financialRiskPrincipalId1 uuid;
        financialRiskIntermediaryId1 uuid;
        financialRiskCoinsurerId1 uuid;
        financialRiskPremiumPaymentId1 uuid;
        housingPolicyId1 uuid;
        responsibilityPolicyId1 uuid;
        personPolicyId1 uuid;
        lifePensionContractId1 uuid;
        pensionPlanContractId1 varchar;
        acceptanceAndBranchesAbroadPolicyId1 uuid;
        patrimonialPolicyId1 uuid;
        ruralPolicyId1 uuid;
        financialAssistanceContractId1 varchar;
        autoPolicyId1 varchar;
        transportPolicyId1 varchar;
    BEGIN
        PERFORM addAccountHolder(docId::varchar, 'CPF'::varchar, accountHolderName, accountHolderEmail);
        account1Id := addAccountWithId(docId, 'a88bbc0b-445f-416c-8896-ae5f45cbe2f0', 'AVAILABLE');
        PERFORM addPersonalIdentification(docId::varchar);
        PERFORM addPersonalQualification(docId);
        PERFORM addPersonalComplimentaryInfo(docId);
        PERFORM addBusinessIdentification(docId, '50685362006773');
        PERFORM addBusinessQualification(docId);
        PERFORM addBusinessComplimentaryInfo(docId);
        capitalizationTitlePlanId1 := addCapitalizationTitlePlan(docId, 'mock_capitalization_title', 'AVAILABLE', 'Test Capitalization Title Plan');
        capitalizationTitlePlanSeriesId1 := addCapitalizationTitlePlanSeries(capitalizationTitlePlanId1, '15414622222222222', 'TRADICIONAL', 'Denominação comercial do produto', 5000000, 48, 48, 'IPCA', 'Índice de atualização Outros', 'IPCA', 'Índice de atualização Outros', false, 'PAGAMENTO_MENSAL', 'string', '10.00');
        capitalizationTitlePlanEventId1 := addCapitalizationTitlePlanEventRaffle(capitalizationTitlePlanId1, 'SORTEIO', '2023-01-30', '2023-01-30', '8', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL');
        capitalizationTitlePlanSettlementId1 := addCapitalizationTitlePlanSettlement(capitalizationTitlePlanId1, '2023-01-30', '2023-01-30', '370', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL');
        PERFORM addCapitalizationTitlePlanQuota(capitalizationTitlePlanSeriesId1, 10, '0.000002', '0.000002', '0.000002');
        PERFORM addCapitalizationTitlePlanBroker(capitalizationTitlePlanSeriesId1, '123123123', 'string');
        capitalizationTitlePlanTitleId1 := addCapitalizationTitlePlanTitle(capitalizationTitlePlanSeriesId1, 'string', '2023-01-30', '2023-01-30', '2023-01-30', '8', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL', '370', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL');
        capitalizationTitlePlanSubscriberId1 := addCapitalizationTitlePlanSubscriber(capitalizationTitlePlanTitleId1, 'Nome do Subscritor', 'OUTROS', 'string', 'string', 'Av Naburo Ykesaki, 1270', 'Fundos', 'Rio de Janeiro', 'RJ', 'BRA', '17500001', '55', '11', '29875132');
        capitalizationTitlePlanHolderId1 := addCapitalizationTitlePlanHolder(capitalizationTitlePlanSubscriberId1, 'Nome do Titular', 'OUTROS', 'string', 'string', 'Av Naburo Ykesaki, 1270', 'Fundos', 'Rio de Janeiro', 'RJ', 'BRA', '17500001', false, false, '55', '11', '29875132');
        capitalizationTitlePlanTechnicalProvisionId1 := addCapitalizationTitlePlanTechnicalProvisions(capitalizationTitlePlanTitleId1, '100.00', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL', '100.00', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL', '100.00', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL', '100.00', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL');
        financialRiskInsuredId1 := addPersonalInfo('12345678900', 'CPF', 'RNE', 'Nome Sobrenome', '1999-06-12', '10000000', 'email@example.com', 'string', 'AC', 'BRA', 'string');
        financialRiskBeneficiaryId1 := addBeneficiaryInfo('12345678900', 'CPF', 'RNE', 'Nome Sobrenome');
        financialRiskPrincipalId1 := addPrincipalInfo('12345678900', 'CPF', 'RNE', 'Nome Sobrenome', '10000000', 'email@example.com', 'string', 'AC', 'BRA', 'string', 'Fundos');
        financialRiskIntermediaryId1 := addIntermediaryInfo('12345678900', 'CPF', 'RNE', 'Nome Sobrenome', '10000000', 'string', 'AC', 'BRA', 'string', 'REPRESENTANTE');
        financialRiskCoinsurerId1 := addCoinsurer('string', '10.00');
        financialRiskPolicyId1 := addFinancialRiskPolicy(docId, 'mock_financial_risk_policy', 'AVAILABLE', 'Produto Exemplo', 'APOLICE_INDIVIDUAL', 'string', 'string', 'EMISSAO_PROPRIA', '2022-05-21', '2022-05-21', '2022-05-21', 'string', 'string', '64.82', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'string', '10.00', 'string', 'string', '10.00');
        perform addPersonalInfoIds(financialRiskPolicyId1, ARRAY[financialRiskInsuredId1]);
        perform addBeneficiaryInfoIds(financialRiskPolicyId1, ARRAY[financialRiskBeneficiaryId1]);
        perform addPrincipalInfoIds(financialRiskPolicyId1, ARRAY[financialRiskPrincipalId1]);
        perform addIntermediaryInfoIds(financialRiskPolicyId1, ARRAY[financialRiskIntermediaryId1]);
        perform addCoinsurerIds(financialRiskPolicyId1, ARRAY[financialRiskCoinsurerId1]);
        financialRiskPolicyInsuredObjectId1 := addFinancialRiskPolicyInsuredObject(financialRiskPolicyId1, 'string', 'CONTRATO', 'string', 'string', '2323031040.10', 'PORCENTAGEM', 'Horas', 'R$', 'BRL');
        PERFORM addFinancialRiskPolicyInsuredObjectCoverage(financialRiskPolicyInsuredObjectId1, '0111', 'PROTECAO_DE_BENS', 'string', 'string', 'string', '100.00', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', true, '2022-12-31', '2022-12-31', true, 'MASSIFICADOS', 'PARAMETRICO', 0, 'DIA', 'DIAS_UTEIS', '2022-12-31', '2022-12-31', 'MENSAL', 'string');
        financialRiskPolicyCoverageDeductibleId1 := addFinancialRiskPolicyCoverageDeductible('DEDUTIVEL', 'string', '20422775042005.26', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 10, 'DIA', 'DIAS_UTEIS', '2022-05-16', '2022-05-17', 'Franquia de exemplo');
        financialRiskPolicyCoveragePosId1 := addFinancialRiskPolicyCoveragePos('VALOR', 'string', '8.55', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', '670205.92', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', '177577949623775.12', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', '920', 'PORCENTAGEM', 'Horas', 'R$', 'BRL');
        PERFORM addFinancialRiskPolicyCoverage(financialRiskPolicyId1, financialRiskPolicyCoverageDeductibleId1, financialRiskPolicyCoveragePosId1, '0111', 'PROTECAO_DE_BENS', 'string');
        financialRiskPolicyClaimId1 := addFinancialRiskPolicyClaim(financialRiskPolicyId1, 'string', '2022-12-31', 'ABERTO', '2022-12-31', '2022-12-31', '2022-12-31', '2022-12-31', '0', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'RISCO_EXCLUIDO', 'string');
        PERFORM addFinancialRiskPolicyClaimCoverage(financialRiskPolicyClaimId1, 'string', '0111', 'PROTECAO_DE_BENS', 'string', '2022-12-31', '2022-12-31');
        financialRiskPremiumPaymentId1 := addPayment('2022-12-31', 'LIQUIDACAO_DE_PREMIO', 'EMISSAO_DIRETA', 'str', '450189334710.26', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', '2022-12-31', 'string', 'CPF', 'RNE', 'string', 'string', 'BOLETO');
        financialRiskPolicyPremiumId1 := addFinancialRiskPolicyPremium(financialRiskPolicyId1, 4, '83816', 'PORCENTAGEM', 'Horas', 'R$', 'BRL');
        PERFORM addPaymentIds(financialRiskPolicyPremiumId1, ARRAY[financialRiskPremiumPaymentId1]);
        PERFORM addFinancialRiskPolicyPremiumCoverage(financialRiskPolicyPremiumId1, '0111', 'PROTECAO_DE_BENS', 'string', '47.74', 'PORCENTAGEM', 'Horas', 'R$', 'BRL');
        housingPolicyId1 = addHousingPolicy(docId, 'mock_housing_policy', 'AVAILABLE');
        PERFORM addHousingPolicyClaim(housingPolicyId1);
        PERFORM addHousingPolicyPremium(housingPolicyId1);
        responsibilityPolicyId1 = addResponsibilityPolicy(docId, 'mock_responsibility_policy', 'AVAILABLE');
        PERFORM addResponsibilityPolicyClaim(responsibilityPolicyId1);
        PERFORM addResponsibilityPolicyPremium(responsibilityPolicyId1);
        personPolicyId1 = addPersonPolicy(docId, 'mock_person_policy', 'AVAILABLE');
        PERFORM addPersonPolicyClaim(personPolicyId1);
        PERFORM addPersonPolicyPremium(personPolicyId1);
        lifePensionContractId1 := addLifePensionContract(docId, 'mock_life_pension', 'AVAILABLE');
        PERFORM addLifePensionContractClaim(lifePensionContractId1);
        PERFORM addLifePensionContractWithdrawal(lifePensionContractId1);
        PERFORM addLifePensionContractPortability(lifePensionContractId1);
        PERFORM addLifePensionContractMovementBenefit(lifePensionContractId1);
        PERFORM addLifePensionContractMovementContribution(lifePensionContractId1);
        pensionPlanContractId1 := addPensionPlanContract('2800e51e-ea28-46d9-8529-0bd5f70b171b', docId, 'AVAILABLE');
        PERFORM addPensionPlanContractClaim(pensionPlanContractId1);
        PERFORM addPensionPlanContractWithdrawal(pensionPlanContractId1);
        PERFORM addPensionPlanContractPortability(pensionPlanContractId1);
        PERFORM addPensionPlanContractMovementBenefit(pensionPlanContractId1);
        PERFORM addPensionPlanContractMovementContribution(pensionPlanContractId1);
        acceptanceAndBranchesAbroadPolicyId1 := addAcceptanceAndBranchesAbroadPolicy(docId, 'mock_acceptance_and_branches_abroad', 'AVAILABLE');
        PERFORM addAcceptanceAndBranchesAbroadClaim(acceptanceAndBranchesAbroadPolicyId1, '987654321');
        patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0114');
        PERFORM addPatrimonialClaim(patrimonialPolicyId1, '987654321');
        patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0116');
        PERFORM addPatrimonialClaim(patrimonialPolicyId1, '987654321');
        patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0118');
        PERFORM addPatrimonialClaim(patrimonialPolicyId1, '987654321');
        patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0196');
        PERFORM addPatrimonialClaim(patrimonialPolicyId1, '987654321');
        patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0173');
        PERFORM addPatrimonialClaim(patrimonialPolicyId1, '987654321');
        patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0141');
        PERFORM addPatrimonialClaim(patrimonialPolicyId1, '987654321');
        patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0167');
        PERFORM addPatrimonialClaim(patrimonialPolicyId1, '987654321');
        patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0112');
        PERFORM addPatrimonialClaim(patrimonialPolicyId1, '987654321');
        patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0171');
        PERFORM addPatrimonialClaim(patrimonialPolicyId1, '987654321');
        patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0195');
        PERFORM addPatrimonialClaim(patrimonialPolicyId1, '987654321');
        ruralPolicyId1 := addRuralPolicy(docId, 'mock_rural', 'AVAILABLE');
        PERFORM addRuralClaim(ruralPolicyId1, '987654321');
        financialAssistanceContractId1 := addFinancialAssistanceContract(docId, 'mock-financial-assistance-4', 'AVAILABLE', '42', '42', '12345', '100.00', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL', '100.00', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL', '0.84', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL', 'MENSAL', 4, '2021-05-21', '2021-05-21', '88.70', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL', '255579661.84', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL', 4, '736280.46', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL', '2021-05-21', '1586029.36', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL', '016', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL', '123604.13', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL', '65.90', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL', '90.02', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL', '100.00', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL');
        PERFORM addFinancialAssistanceContractMovement(financialAssistanceContractId1, '291218.42', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL', 4, 4, '910677.19', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL', '0546074035413.87', 'PORCENTAGEM', 'Horas', 'R$', 'BRL', 'BRL');
        PERFORM addFinancialAssistanceContractInsured(financialAssistanceContractId1, 'CPF', 'string', '12345678910', 'Juan Kaique Cláudio Fernandes');
        autoPolicyId1 := addAutoPolicy(docId, '751163af-a3c5-45a0-82bf-7ca0eae7c1b1', 'AVAILABLE', 'APOLICE_INDIVIDUAL', 'mock-auto-policy-proposal-1');
        PERFORM addAutoPolicyClaim(autoPolicyId1, 'ABERTO');
        transportPolicyId1 := addTransportPolicy(docId, '4f81b394-2b24-4d67-9f2f-36c8fd30139e', 'AVAILABLE', 'APOLICE_INDIVIDUAL', 'mock-transport-policy-proposal-1');
        PERFORM addTransportPolicyClaim(transportPolicyId1, 'ABERTO');
    END $$;