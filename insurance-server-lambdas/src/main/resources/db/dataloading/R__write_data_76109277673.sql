-- ${flyway:timestamp}
DO $$DECLARE
    docId varchar := '76109277673';
    accountHolderName varchar := 'Ralph Bragg';
    accountHolderEmail varchar := 'ralph.bragg@gmail.com';
    account1Id varchar;
    capitalizationTitlePlanId1 uuid;
    financialRiskPolicyId1 uuid;
    housingPolicyId1 uuid;
    responsibilityPolicyId1 uuid;
    personPolicyId1 uuid;
    lifePensionContractId1 uuid;
    pensionPlanContractId1 varchar;
    acceptanceAndBranchesAbroadPolicyId1 uuid;
    patrimonialPolicyId1 uuid;
    ruralPolicyId1 uuid;
    financialAssistanceContractId1 varchar;
    autoPolicyId1 varchar;
    transportPolicyId1 varchar;
BEGIN
    PERFORM addAccountHolder(docId::varchar, 'CPF'::varchar, accountHolderName, accountHolderEmail);
    account1Id := addAccountWithId(docId, '291e5a29-49ed-401f-a583-193caa7aceee', 'AVAILABLE');
    PERFORM addPersonalIdentification(docId::varchar);
    PERFORM addPersonalQualification(docId);
    PERFORM addPersonalComplimentaryInfo(docId);
    PERFORM addBusinessIdentification(docId, '50685362006773');
    PERFORM addBusinessQualification(docId);
    PERFORM addBusinessComplimentaryInfo(docId);
    capitalizationTitlePlanId1 := addCapitalizationTitlePlan(docId, 'mock_capitalization_title', 'AVAILABLE');
    PERFORM addCapitalizationTitlePlanSeries(capitalizationTitlePlanId1, '15414622222222222');
    PERFORM addCapitalizationTitlePlanEvent(capitalizationTitlePlanId1, 'SORTEIO');
    PERFORM addCapitalizationTitlePlanSettlement(capitalizationTitlePlanId1);
    financialRiskPolicyId1 = addFinancialRiskPolicy(docId, 'mock_financial_risk_policy', 'AVAILABLE');
    PERFORM addFinancialRiskPolicyClaim(financialRiskPolicyId1);
    PERFORM addFinancialRiskPolicyPremium(financialRiskPolicyId1);
    housingPolicyId1 = addHousingPolicy(docId, 'mock_housing_policy', 'AVAILABLE');
    PERFORM addHousingPolicyClaim(housingPolicyId1);
    PERFORM addHousingPolicyPremium(housingPolicyId1);
    responsibilityPolicyId1 = addResponsibilityPolicy(docId, 'mock_responsibility_policy', 'AVAILABLE');
    PERFORM addResponsibilityPolicyClaim(responsibilityPolicyId1);
    PERFORM addResponsibilityPolicyPremium(responsibilityPolicyId1);
    personPolicyId1 = addPersonPolicy(docId, 'mock_person_policy', 'AVAILABLE');
    PERFORM addPersonPolicyClaim(personPolicyId1);
    PERFORM addPersonPolicyPremium(personPolicyId1);
    lifePensionContractId1 := addLifePensionContract(docId, 'mock_life_pension', 'AVAILABLE');
    PERFORM addLifePensionContractClaim(lifePensionContractId1);
    PERFORM addLifePensionContractWithdrawal(lifePensionContractId1);
    PERFORM addLifePensionContractPortability(lifePensionContractId1);
    PERFORM addLifePensionContractMovementBenefit(lifePensionContractId1);
    PERFORM addLifePensionContractMovementContribution(lifePensionContractId1);
    pensionPlanContractId1 := addPensionPlanContract('mock-pension-plan', docId, 'AVAILABLE');
    PERFORM addPensionPlanContractClaim(pensionPlanContractId1);
    PERFORM addPensionPlanContractWithdrawal(pensionPlanContractId1);
    PERFORM addPensionPlanContractPortability(pensionPlanContractId1);
    PERFORM addPensionPlanContractMovementBenefit(pensionPlanContractId1);
    PERFORM addPensionPlanContractMovementContribution(pensionPlanContractId1);
    acceptanceAndBranchesAbroadPolicyId1 := addAcceptanceAndBranchesAbroadPolicy(docId, 'mock_acceptance_and_branches_abroad', 'AVAILABLE');
    PERFORM addAcceptanceAndBranchesAbroadClaim(acceptanceAndBranchesAbroadPolicyId1, '123456789');
    patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0114');
    PERFORM addPatrimonialClaim(patrimonialPolicyId1, '123456789');
    patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0116');
    PERFORM addPatrimonialClaim(patrimonialPolicyId1, '123456789');
    patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0118');
    PERFORM addPatrimonialClaim(patrimonialPolicyId1, '123456789');
    patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0196');
    PERFORM addPatrimonialClaim(patrimonialPolicyId1, '123456789');
    patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0173');
    PERFORM addPatrimonialClaim(patrimonialPolicyId1, '123456789');
    patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0141');
    PERFORM addPatrimonialClaim(patrimonialPolicyId1, '123456789');
    patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0167');
    PERFORM addPatrimonialClaim(patrimonialPolicyId1, '123456789');
    patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0112');
    PERFORM addPatrimonialClaim(patrimonialPolicyId1, '123456789');
    patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0171');
    PERFORM addPatrimonialClaim(patrimonialPolicyId1, '123456789');
    patrimonialPolicyId1 := addPatrimonialPolicy(docId, 'mock_patrimonial', 'AVAILABLE', '0195');
    PERFORM addPatrimonialClaim(patrimonialPolicyId1, '123456789');
    ruralPolicyId1 := addRuralPolicy(docId, 'mock_rural', 'AVAILABLE');
    PERFORM addRuralClaim(ruralPolicyId1, '123456789');
    financialAssistanceContractId1 := addFinancialAssistanceContract(docId, 'mock-financial-assistance-1', 'AVAILABLE');
    PERFORM addFinancialAssistanceContractMovement(financialAssistanceContractId1);
    autoPolicyId1 := addAutoPolicy(docId, 'mock-auto-policy-1', 'AVAILABLE', 'APOLICE_INDIVIDUAL', 'mock-auto-policy-proposal-1');
    PERFORM addAutoPolicyClaim(autoPolicyId1, 'ABERTO');
    transportPolicyId1 := addTransportPolicy(docId, 'mock-transport-policy-1', 'AVAILABLE', 'APOLICE_INDIVIDUAL', 'mock-transport-policy-proposal-1');
    PERFORM addTransportPolicyClaim(transportPolicyId1, 'ABERTO');
END $$;