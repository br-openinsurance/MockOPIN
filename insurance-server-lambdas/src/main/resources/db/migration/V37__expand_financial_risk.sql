CREATE TABLE beneficiary_info (
    reference_id UUID PRIMARY KEY DEFAULT uuid_generate_v4() NOT NULL,
    name VARCHAR,
    identification VARCHAR,
    identification_type VARCHAR,
    identification_type_others VARCHAR,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR
);

CREATE TABLE beneficiary_info_aud (
    reference_id UUID,
    name VARCHAR,
    identification VARCHAR,
    identification_type VARCHAR,
    identification_type_others VARCHAR,
    rev                  INTEGER NOT NULL,
    revtype              SMALLINT,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (reference_id, rev),
    FOREIGN KEY (rev) REFERENCES revinfo (rev)
);

CREATE TABLE beneficiary_info_ids (
    reference_id UUID NOT NULL,
    beneficiary_id UUID,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (reference_id, beneficiary_id)
);

CREATE TABLE beneficiary_info_ids_aud (
    reference_id UUID NOT NULL,
    beneficiary_id UUID,
    rev                  INTEGER NOT NULL,
    revtype              SMALLINT,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (reference_id, rev),
    FOREIGN KEY (rev) REFERENCES revinfo (rev)
);

ALTER TABLE financial_risk_policies
    ADD COLUMN product_name varchar,
    ADD COLUMN document_type varchar,
    ADD COLUMN policy_id varchar,
    ADD COLUMN susep_process_number varchar,
    ADD COLUMN group_certificate_id varchar,
    ADD COLUMN issuance_type varchar,
    ADD COLUMN issuance_date date,
    ADD COLUMN term_start_date date,
    ADD COLUMN term_end_date date,
    ADD COLUMN lead_insurer_code varchar,
    ADD COLUMN lead_insurer_policy_id varchar,
    ADD COLUMN max_lmg_amount varchar,
    ADD COLUMN max_lmg_unit_type varchar,
    ADD COLUMN max_lmg_unit_type_others varchar,
    ADD COLUMN max_lmg_unit_code varchar,
    ADD COLUMN max_lmg_unit_description varchar,
    ADD COLUMN max_lmg_currency varchar,
    ADD COLUMN proposal_id varchar,
    ADD COLUMN coinsurance_retained_percentage varchar,
    ADD COLUMN identification varchar,
    ADD COLUMN user_group varchar,
    ADD COLUMN technical_surplus varchar;

ALTER TABLE financial_risk_policies_aud
    ADD COLUMN product_name varchar,
    ADD COLUMN document_type varchar,
    ADD COLUMN policy_id varchar,
    ADD COLUMN susep_process_number varchar,
    ADD COLUMN group_certificate_id varchar,
    ADD COLUMN issuance_type varchar,
    ADD COLUMN issuance_date date,
    ADD COLUMN term_start_date date,
    ADD COLUMN term_end_date date,
    ADD COLUMN lead_insurer_code varchar,
    ADD COLUMN lead_insurer_policy_id varchar,
    ADD COLUMN max_lmg_amount varchar,
    ADD COLUMN max_lmg_unit_type varchar,
    ADD COLUMN max_lmg_unit_type_others varchar,
    ADD COLUMN max_lmg_unit_code varchar,
    ADD COLUMN max_lmg_unit_description varchar,
    ADD COLUMN max_lmg_currency varchar,
    ADD COLUMN proposal_id varchar,
    ADD COLUMN coinsurance_retained_percentage varchar,
    ADD COLUMN identification varchar,
    ADD COLUMN user_group varchar,
    ADD COLUMN technical_surplus varchar;

ALTER TABLE financial_risk_policy_claims
    ADD COLUMN identification VARCHAR,
    ADD COLUMN documentation_delivery_date DATE,
    ADD COLUMN status VARCHAR,
    ADD COLUMN status_alteration_date DATE,
    ADD COLUMN occurrence_date DATE,
    ADD COLUMN warning_date DATE,
    ADD COLUMN third_party_claim_date DATE,
    ADD COLUMN amount VARCHAR,
    ADD COLUMN unit_type VARCHAR,
    ADD COLUMN unit_type_others VARCHAR,
    ADD COLUMN unit_code VARCHAR,
    ADD COLUMN unit_description VARCHAR,
    ADD COLUMN currency VARCHAR,
    ADD COLUMN denial_justification VARCHAR,
    ADD COLUMN denial_justification_description varchar;

ALTER TABLE financial_risk_policy_claims_aud
    ADD COLUMN identification VARCHAR,
    ADD COLUMN documentation_delivery_date DATE,
    ADD COLUMN status VARCHAR,
    ADD COLUMN status_alteration_date DATE,
    ADD COLUMN occurrence_date DATE,
    ADD COLUMN warning_date DATE,
    ADD COLUMN third_party_claim_date DATE,
    ADD COLUMN amount VARCHAR,
    ADD COLUMN unit_type VARCHAR,
    ADD COLUMN unit_type_others VARCHAR,
    ADD COLUMN unit_code VARCHAR,
    ADD COLUMN unit_description VARCHAR,
    ADD COLUMN currency VARCHAR,
    ADD COLUMN denial_justification VARCHAR,
    ADD COLUMN denial_justification_description varchar;

ALTER TABLE financial_risk_policy_premiums
    ADD COLUMN payments_quantity VARCHAR,
    ADD COLUMN amount VARCHAR,
    ADD COLUMN unit_type VARCHAR,
    ADD COLUMN unit_type_others VARCHAR,
    ADD COLUMN unit_code VARCHAR,
    ADD COLUMN unit_description VARCHAR,
    ADD COLUMN currency VARCHAR;

ALTER TABLE financial_risk_policy_premiums_aud
    ADD COLUMN payments_quantity VARCHAR,
    ADD COLUMN amount VARCHAR,
    ADD COLUMN unit_type VARCHAR,
    ADD COLUMN unit_type_others VARCHAR,
    ADD COLUMN unit_code VARCHAR,
    ADD COLUMN unit_description VARCHAR,
    ADD COLUMN currency VARCHAR;

CREATE TABLE deductibles (
    reference_id UUID PRIMARY KEY DEFAULT uuid_generate_v4() NOT NULL,
    name VARCHAR,
    identification VARCHAR,
    identification_type VARCHAR,
    identification_type_others VARCHAR,
    type VARCHAR,
    type_additional_info VARCHAR,
    amount VARCHAR,
    unit_type VARCHAR,
    unit_type_others VARCHAR,
    unit_code VARCHAR,
    unit_description VARCHAR,
    currency VARCHAR,
    period VARCHAR,
    periodicity VARCHAR,
    period_counting_method VARCHAR,
    period_start_date DATE,
    period_end_date DATE,
    description VARCHAR,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR
);

CREATE TABLE deductibles_aud (
    reference_id UUID,
    name VARCHAR,
    identification VARCHAR,
    identification_type VARCHAR,
    identification_type_others VARCHAR,
    type VARCHAR,
    type_additional_info VARCHAR,
    amount VARCHAR,
    unit_type VARCHAR,
    unit_type_others VARCHAR,
    unit_code VARCHAR,
    unit_description VARCHAR,
    currency VARCHAR,
    period VARCHAR,
    periodicity VARCHAR,
    period_counting_method VARCHAR,
    period_start_date DATE,
    period_end_date DATE,
    description VARCHAR,
    rev                  INTEGER NOT NULL,
    revtype              SMALLINT,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (reference_id, rev),
    FOREIGN KEY (rev) REFERENCES revinfo (rev)
);

CREATE TABLE pos (
    pos_id UUID PRIMARY KEY DEFAULT uuid_generate_v4() NOT NULL,
    application_type VARCHAR,
    description VARCHAR,
    min_value_amount VARCHAR,
    min_value_unit_type VARCHAR,
    min_value_unit_type_others VARCHAR,
    min_value_unit_code VARCHAR,
    min_value_unit_description VARCHAR,
    min_value_currency VARCHAR,
    max_value_amount VARCHAR,
    max_value_unit_type VARCHAR,
    max_value_unit_type_others VARCHAR,
    max_value_unit_code VARCHAR,
    max_value_unit_description VARCHAR,
    max_value_currency VARCHAR,
    percentage_amount VARCHAR,
    percentage_unit_type VARCHAR,
    percentage_unit_type_others VARCHAR,
    percentage_unit_code VARCHAR,
    percentage_unit_description VARCHAR,
    percentage_currency VARCHAR,
    value_others_amount VARCHAR,
    value_others_unit_type VARCHAR,
    value_others_unit_type_others VARCHAR,
    value_others_unit_code VARCHAR,
    value_others_unit_description VARCHAR,
    value_others_currency VARCHAR,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR
);

CREATE TABLE pos_aud (
    pos_id UUID,
    application_type VARCHAR,
    description VARCHAR,
    min_value_amount VARCHAR,
    min_value_unit_type VARCHAR,
    min_value_unit_type_others VARCHAR,
    min_value_unit_code VARCHAR,
    min_value_unit_description VARCHAR,
    min_value_currency VARCHAR,
    max_value_amount VARCHAR,
    max_value_unit_type VARCHAR,
    max_value_unit_type_others VARCHAR,
    max_value_unit_code VARCHAR,
    max_value_unit_description VARCHAR,
    max_value_currency VARCHAR,
    percentage_amount VARCHAR,
    percentage_unit_type VARCHAR,
    percentage_unit_type_others VARCHAR,
    percentage_unit_code VARCHAR,
    percentage_unit_description VARCHAR,
    percentage_currency VARCHAR,
    value_others_amount VARCHAR,
    value_others_unit_type VARCHAR,
    value_others_unit_type_others VARCHAR,
    value_others_unit_code VARCHAR,
    value_others_unit_description VARCHAR,
    value_others_currency VARCHAR,
    rev                  INTEGER NOT NULL,
    revtype              SMALLINT,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (pos_id, rev),
    FOREIGN KEY (rev) REFERENCES revinfo (rev)
);

CREATE TABLE financial_risk_policy_coverages (
    financial_risk_policy_coverage_id UUID PRIMARY KEY DEFAULT uuid_generate_v4() NOT NULL,
    branch VARCHAR,
    code VARCHAR,
    description VARCHAR,
    pos_id uuid,
    deductible_id uuid,
    financial_risk_policy_id UUID,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    FOREIGN KEY (pos_id) REFERENCES pos (pos_id) ON DELETE CASCADE,
    FOREIGN KEY (deductible_id) REFERENCES deductibles (reference_id) ON DELETE CASCADE,
    FOREIGN KEY (financial_risk_policy_id) REFERENCES financial_risk_policies (financial_risk_policy_id) ON DELETE CASCADE
);

CREATE TABLE financial_risk_policy_coverages_aud (
    financial_risk_policy_coverage_id UUID,
    branch VARCHAR,
    code VARCHAR,
    description VARCHAR,
    pos_id uuid,
    deductible_id uuid,
    financial_risk_policy_id UUID,
    rev                  INTEGER NOT NULL,
    revtype              SMALLINT,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (financial_risk_policy_coverage_id, rev),
    FOREIGN KEY (rev) REFERENCES revinfo (rev)
);

CREATE TABLE coinsurers (
    coinsurer_id UUID PRIMARY KEY DEFAULT uuid_generate_v4() NOT NULL,
    identification VARCHAR,
    ceded_percentage VARCHAR,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR
);

CREATE TABLE coinsurers_aud (
    coinsurer_id UUID,
    identification VARCHAR,
    ceded_percentage VARCHAR,
    rev                  INTEGER NOT NULL,
    revtype              SMALLINT,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (coinsurer_id, rev),
    FOREIGN KEY (rev) REFERENCES revinfo (rev)
);

CREATE TABLE coinsurer_ids (
    reference_id UUID NOT NULL,
    coinsurer_id UUID,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (reference_id, coinsurer_id)
);

CREATE TABLE coinsurer_ids_aud (
    reference_id UUID NOT NULL,
    coinsurer_id UUID,
    rev                  INTEGER NOT NULL,
    revtype              SMALLINT,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (reference_id, rev),
    FOREIGN KEY (rev) REFERENCES revinfo (rev)
);

CREATE TABLE financial_risk_policy_claim_coverages (
    financial_risk_policy_claim_coverage_id UUID PRIMARY KEY DEFAULT uuid_generate_v4() NOT NULL,
    insured_object_id VARCHAR,
    branch VARCHAR,
    code VARCHAR,
    description VARCHAR,
    warning_date DATE,
    third_party_claim_date DATE,
    financial_risk_policy_claim_id UUID,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    FOREIGN KEY (financial_risk_policy_claim_id) REFERENCES financial_risk_policy_claims (financial_risk_policy_claim_id) ON DELETE CASCADE
);

CREATE TABLE financial_risk_policy_claim_coverages_aud (
    financial_risk_policy_claim_coverage_id UUID,
    insured_object_id VARCHAR,
    branch VARCHAR,
    code VARCHAR,
    description VARCHAR,
    warning_date DATE,
    third_party_claim_date DATE,
    financial_risk_policy_claim_id UUID,
    rev                  INTEGER NOT NULL,
    revtype              SMALLINT,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (financial_risk_policy_claim_coverage_id, rev),
    FOREIGN KEY (rev) REFERENCES revinfo (rev)
);

CREATE TABLE financial_risk_policy_insured_objects (
      financial_risk_policy_insured_object_id UUID PRIMARY KEY DEFAULT uuid_generate_v4() NOT NULL,
      identification VARCHAR,
      type VARCHAR,
      type_additional_info VARCHAR,
      description VARCHAR,
      amount VARCHAR,
      unit_type VARCHAR,
      unit_type_others VARCHAR,
      unit_code VARCHAR,
      unit_description VARCHAR,
      currency VARCHAR,
      financial_risk_policy_id UUID,
      created_at           TIMESTAMP,
      created_by           VARCHAR,
      updated_at           TIMESTAMP,
      updated_by           VARCHAR,
      hibernate_status     VARCHAR,
      FOREIGN KEY (financial_risk_policy_id) REFERENCES financial_risk_policies (financial_risk_policy_id) ON DELETE CASCADE
  );

  CREATE TABLE financial_risk_policy_insured_objects_aud (
      financial_risk_policy_insured_object_id UUID,
      identification VARCHAR,
      type VARCHAR,
      type_additional_info VARCHAR,
      description VARCHAR,
      amount VARCHAR,
      unit_type VARCHAR,
      unit_type_others VARCHAR,
      unit_code VARCHAR,
      unit_description VARCHAR,
      currency VARCHAR,
      financial_risk_policy_id UUID,
      rev                  INTEGER NOT NULL,
      revtype              SMALLINT,
      created_at           TIMESTAMP,
      created_by           VARCHAR,
      updated_at           TIMESTAMP,
      updated_by           VARCHAR,
      hibernate_status     VARCHAR,
      PRIMARY KEY (financial_risk_policy_insured_object_id, rev),
      FOREIGN KEY (rev) REFERENCES revinfo (rev)
  );

CREATE TABLE financial_risk_policy_insured_object_coverages (
    financial_risk_policy_insured_object_coverage_id UUID PRIMARY KEY DEFAULT uuid_generate_v4() NOT NULL,
    branch VARCHAR,
    code VARCHAR,
    description VARCHAR,
    internal_code VARCHAR,
    susep_process_number VARCHAR,
    lmi_amount VARCHAR,
    lmi_unit_type VARCHAR,
    lmi_unit_type_others VARCHAR,
    lmi_unit_code VARCHAR,
    lmi_unit_description VARCHAR,
    lmi_currency VARCHAR,
    is_lmi_sublimit VARCHAR,
    term_start_date DATE,
    term_end_date DATE,
    is_main_coverage boolean,
    feature VARCHAR,
    type VARCHAR,
    grace_period INTEGER,
    grace_periodicity VARCHAR,
    grace_period_counting_method VARCHAR,
    grace_period_start_date DATE,
    grace_period_end_date DATE,
    premium_periodicity VARCHAR,
    premium_periodicity_others VARCHAR,
    financial_risk_policy_insured_object_id UUID,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    FOREIGN KEY (financial_risk_policy_insured_object_id) REFERENCES financial_risk_policy_insured_objects (financial_risk_policy_insured_object_id) ON DELETE CASCADE
);

CREATE TABLE financial_risk_policy_insured_object_coverages_aud (
    financial_risk_policy_insured_object_coverage_id UUID,
    branch VARCHAR,
    code VARCHAR,
    description VARCHAR,
    internal_code VARCHAR,
    susep_process_number VARCHAR,
    lmi_amount VARCHAR,
    lmi_unit_type VARCHAR,
    lmi_unit_type_others VARCHAR,
    lmi_unit_code VARCHAR,
    lmi_unit_description VARCHAR,
    lmi_currency VARCHAR,
    is_lmi_sublimit VARCHAR,
    term_start_date DATE,
    term_end_date DATE,
    is_main_coverage boolean,
    feature VARCHAR,
    type VARCHAR,
    grace_period INTEGER,
    grace_periodicity VARCHAR,
    grace_period_counting_method VARCHAR,
    grace_period_start_date DATE,
    grace_period_end_date DATE,
    premium_periodicity VARCHAR,
    premium_periodicity_others VARCHAR,
    financial_risk_policy_insured_object_id UUID,
    rev                  INTEGER NOT NULL,
    revtype              SMALLINT,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (financial_risk_policy_insured_object_coverage_id, rev),
    FOREIGN KEY (rev) REFERENCES revinfo (rev)
);

CREATE TABLE financial_risk_policy_premium_coverages (
      financial_risk_policy_premium_coverage_id UUID PRIMARY KEY DEFAULT uuid_generate_v4() NOT NULL,
      branch VARCHAR,
      code VARCHAR,
      description VARCHAR,
      premium_amount VARCHAR,
      premium_unit_type VARCHAR,
      premium_unit_type_others VARCHAR,
      premium_unit_code VARCHAR,
      premium_unit_description VARCHAR,
      premium_currency VARCHAR,
      financial_risk_policy_premium_id UUID,
      created_at           TIMESTAMP,
      created_by           VARCHAR,
      updated_at           TIMESTAMP,
      updated_by           VARCHAR,
      hibernate_status     VARCHAR,
      FOREIGN KEY (financial_risk_policy_premium_id) REFERENCES financial_risk_policy_premiums (financial_risk_policy_premium_id) ON DELETE CASCADE
  );

  CREATE TABLE financial_risk_policy_premium_coverages_aud (
      financial_risk_policy_premium_coverage_id UUID,
      branch VARCHAR,
      code VARCHAR,
      description VARCHAR,
      premium_amount VARCHAR,
      premium_unit_type VARCHAR,
      premium_unit_type_others VARCHAR,
      premium_unit_code VARCHAR,
      premium_unit_description VARCHAR,
      premium_currency VARCHAR,
      financial_risk_policy_premium_id UUID,
      rev                  INTEGER NOT NULL,
      revtype              SMALLINT,
      created_at           TIMESTAMP,
      created_by           VARCHAR,
      updated_at           TIMESTAMP,
      updated_by           VARCHAR,
      hibernate_status     VARCHAR,
      PRIMARY KEY (financial_risk_policy_premium_coverage_id, rev),
      FOREIGN KEY (rev) REFERENCES revinfo (rev)
  );

CREATE TABLE intermediaries (
    reference_id UUID PRIMARY KEY DEFAULT uuid_generate_v4() NOT NULL,
    name VARCHAR,
    identification VARCHAR,
    identification_type VARCHAR,
    identification_type_others VARCHAR,
    broker_id VARCHAR,
    type VARCHAR,
    type_others VARCHAR,
    post_code VARCHAR,
    city VARCHAR,
    state VARCHAR,
    country VARCHAR,
    address VARCHAR,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR
);

CREATE TABLE intermediaries_aud (
    reference_id UUID,
    name VARCHAR,
    identification VARCHAR,
    identification_type VARCHAR,
    identification_type_others VARCHAR,
    broker_id VARCHAR,
    type VARCHAR,
    type_others VARCHAR,
    post_code VARCHAR,
    city VARCHAR,
    state VARCHAR,
    country VARCHAR,
    address VARCHAR,
    rev                  INTEGER NOT NULL,
    revtype              SMALLINT,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (reference_id, rev),
    FOREIGN KEY (rev) REFERENCES revinfo (rev)
);

CREATE TABLE intermediary_info_ids (
    reference_id UUID NOT NULL,
    intermediary_id UUID,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (reference_id, intermediary_id)
);

CREATE TABLE intermediary_info_ids_aud (
    reference_id UUID NOT NULL,
    intermediary_id UUID,
    rev                  INTEGER NOT NULL,
    revtype              SMALLINT,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (reference_id, rev),
    FOREIGN KEY (rev) REFERENCES revinfo (rev)
);

CREATE TABLE payments (
    payment_id UUID PRIMARY KEY DEFAULT uuid_generate_v4() NOT NULL,
    movement_date DATE,
    movement_type VARCHAR,
    movement_origin VARCHAR,
    movement_payments_number VARCHAR,
    amount VARCHAR,
    unit_type VARCHAR,
    unit_type_others VARCHAR,
    unit_code VARCHAR,
    unit_description VARCHAR,
    currency VARCHAR,
    maturity_date DATE,
    teller_id VARCHAR,
    teller_id_type VARCHAR,
    teller_id_type_others VARCHAR,
    teller_name VARCHAR,
    financial_institution_code VARCHAR,
    payment_type VARCHAR,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR
);

CREATE TABLE payments_aud (
    payment_id UUID,
    movement_date DATE,
    movement_type VARCHAR,
    movement_origin VARCHAR,
    movement_payments_number VARCHAR,
    amount VARCHAR,
    unit_type VARCHAR,
    unit_type_others VARCHAR,
    unit_code VARCHAR,
    unit_description VARCHAR,
    currency VARCHAR,
    maturity_date DATE,
    teller_id VARCHAR,
    teller_id_type VARCHAR,
    teller_id_type_others VARCHAR,
    teller_name VARCHAR,
    financial_institution_code VARCHAR,
    payment_type VARCHAR,
    rev                  INTEGER NOT NULL,
    revtype              SMALLINT,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (payment_id, rev),
    FOREIGN KEY (rev) REFERENCES revinfo (rev)
);

CREATE TABLE payment_ids (
    reference_id UUID NOT NULL,
    payment_id UUID,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (reference_id, payment_id)
);

CREATE TABLE payment_ids_aud (
    reference_id UUID NOT NULL,
    payment_id UUID,
    rev                  INTEGER NOT NULL,
    revtype              SMALLINT,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (reference_id, rev),
    FOREIGN KEY (rev) REFERENCES revinfo (rev)
);

CREATE TABLE personal_info (
    reference_id UUID PRIMARY KEY DEFAULT uuid_generate_v4() NOT NULL,
    name VARCHAR,
    identification VARCHAR,
    identification_type VARCHAR,
    identification_type_others VARCHAR,
    birth_date DATE,
    post_code VARCHAR,
    email VARCHAR,
    city VARCHAR,
    state VARCHAR,
    country VARCHAR,
    address VARCHAR,
    address_additional_info VARCHAR,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR
);

CREATE TABLE personal_info_aud (
    reference_id UUID,
    name VARCHAR,
    identification VARCHAR,
    identification_type VARCHAR,
    identification_type_others VARCHAR,
    birth_date DATE,
    post_code VARCHAR,
    email VARCHAR,
    city VARCHAR,
    state VARCHAR,
    country VARCHAR,
    address VARCHAR,
    address_additional_info VARCHAR,
    rev                  INTEGER NOT NULL,
    revtype              SMALLINT,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (reference_id, rev),
    FOREIGN KEY (rev) REFERENCES revinfo (rev)
);

CREATE TABLE personal_info_ids (
    reference_id UUID NOT NULL,
    personal_id UUID,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (reference_id, personal_id)
);

CREATE TABLE personal_info_ids_aud (
    reference_id UUID NOT NULL,
    personal_id UUID,
    rev                  INTEGER NOT NULL,
    revtype              SMALLINT,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (reference_id, rev),
    FOREIGN KEY (rev) REFERENCES revinfo (rev)
);

CREATE TABLE principal_info (
    reference_id UUID PRIMARY KEY DEFAULT uuid_generate_v4() NOT NULL,
    name VARCHAR,
    identification VARCHAR,
    identification_type VARCHAR,
    identification_type_others VARCHAR,
    post_code VARCHAR,
    email VARCHAR,
    city VARCHAR,
    state VARCHAR,
    country VARCHAR,
    address VARCHAR,
    address_additional_info VARCHAR,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR
);

CREATE TABLE principal_info_aud (
    reference_id UUID,
    name VARCHAR,
    identification VARCHAR,
    identification_type VARCHAR,
    identification_type_others VARCHAR,
    post_code VARCHAR,
    email VARCHAR,
    city VARCHAR,
    state VARCHAR,
    country VARCHAR,
    address VARCHAR,
    address_additional_info VARCHAR,
    rev                  INTEGER NOT NULL,
    revtype              SMALLINT,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (reference_id, rev),
    FOREIGN KEY (rev) REFERENCES revinfo (rev)
);

CREATE TABLE principal_info_ids (
    reference_id UUID NOT NULL,
    principal_id UUID,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (reference_id, principal_id)
);

CREATE TABLE principal_info_ids_aud (
    reference_id UUID NOT NULL,
    principal_id UUID,
    rev                  INTEGER NOT NULL,
    revtype              SMALLINT,
    created_at           TIMESTAMP,
    created_by           VARCHAR,
    updated_at           TIMESTAMP,
    updated_by           VARCHAR,
    hibernate_status     VARCHAR,
    PRIMARY KEY (reference_id, rev),
    FOREIGN KEY (rev) REFERENCES revinfo (rev)
);